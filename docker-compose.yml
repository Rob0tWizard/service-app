services:
  web-app:
    build:
      context: .
#указали путь к докер-файлу, а он будет использован для билда контейнера
    ports:
      - "8000:8000"

    volumes:
      - ./service:/service
#подключенная папка с локальной машины в контейнер. Локальные изменения - изменения в контейнере, чтоб изменения питон кода применялисьсразу же
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
      
    depends_on:
      - database
    #значит что наш сервис зависит от другого сервиса(датабэйс),тоесть мы НЕ должны запускать web-app раньше чем database

  database:
    image: postgres:14.6-alpine
    volumes: # Используйте существующее определение тома postgres_data
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass


  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass

  worker2:
    build:
      context: .
    hostname: worker2
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass

  flower:                   # показывает какие в данный момент таски запущены, отработали в очереди
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis
    ports:
      - '5555:5555'



volumes:
  postgres_data:


